- name: GVL Galaxy - Copy config and tool-data
  synchronize: src=galaxy-app/ dest={{ galaxy_server_dir }}/
  sudo: yes
  sudo_user: galaxy

- name: GVL Galaxy - Make sure galaxy-apps is owned by the galaxy user
  file: dest={{ galaxy_server_dir }} owner={{ galaxy_user_name }} group={{ galaxy_user_name }}
  sudo: yes
  sudo_user: root

- name: GVL Galaxy - Copy tool management scripts
  copy: src=scripts/{{ item }} dest={{ galaxy_server_dir }}/{{ item }} owner={{ galaxy_user_name }}
  with_items:
    - manage_gvl_bootstrap_user.py
    - install_tool_shed_tools.py
    - shed_tool_list.yaml.gvl
  sudo: yes
  sudo_user: "{{ galaxy_user_name }}"

- name: GVL Galaxy - Create galaxy buildbot user
  command: chdir={{ galaxy_server_dir }} {{ galaxy_venv_dir }}/bin/python manage_gvl_bootstrap_user.py -c {{ galaxy_config_file }} create
  register: api_key
  sudo: yes
  sudo_user: "{{ galaxy_user_name }}"

- name: GVL Galaxy - Set buildbot user as galaxy admin
  lineinfile: dest={{ galaxy_config_file }} state=present insertafter="app:main" regexp="admin_users =" line="admin_users = buildbot@genome.edu.au"
  sudo: yes
  sudo_user: root

- name: GVL Galaxy - Install yaml package
  pip: name={{ item }} virtualenv="{{ galaxy_venv_dir }}"
  with_items:
    - pyyaml
    - bioblend
  sudo: yes
  sudo_user: "{{ galaxy_user_name }}"

- name: GVL Galaxy - Start Galaxy
  shell: "{{ galaxy_server_dir }}/run.sh --daemon"
  sudo: yes
  sudo_user: "{{ galaxy_user_name }}"

- name: GVL Galaxy - Wait for Galaxy to start
  wait_for: port={{ galaxy_webserver_port }} delay=5 state=started timeout=150

- name: GVL Galaxy - Install toolshed tools as buildbot user
  command: chdir={{ galaxy_server_dir }} {{ galaxy_venv_dir }}/bin/python install_tool_shed_tools.py -f shed_tool_list.yaml.gvl -a {{ api_key.stdout_lines[0] }} -g http://127.0.0.1:{{ galaxy_webserver_port }}/
  sudo: yes
  sudo_user: "{{ galaxy_user_name }}"

- name: GVL Galaxy - Stop Galaxy
  command: "{{ galaxy_server_dir }}/run.sh --stop-daemon"
  sudo: yes
  sudo_user: "{{ galaxy_user_name }}"

- name: GVL Galaxy - Remove buildbot user as galaxy admin
  lineinfile: dest={{ galaxy_config_file }} state=present insertafter="app:main" regexp="admin_users =" line="admin_users ="
  sudo: yes
  sudo_user: root

- name: GVL Galaxy - Remove galaxy buildbot user
  command: chdir={{ galaxy_server_dir }} {{ galaxy_venv_dir }}/bin/python manage_gvl_bootstrap_user.py -c {{ galaxy_config_file }} delete
  sudo: yes
  sudo_user: "{{ galaxy_user_name }}"

- name: GVL Galaxy - Remove tool management scripts
  file: dest={{ galaxy_server_dir }}/{{ item }} state=absent
  with_items:
    - manage_gvl_bootstrap_user.py
    - install_tool_shed_tools.py
    - shed_tool_list.yaml.gvl
  sudo: yes
  sudo_user: "{{ galaxy_user_name }}"
